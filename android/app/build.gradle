def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


if (project.hasProperty("local.signing")) {
    apply from: getSigningFile()
}

def getSigningFile() {
    return project.property("local.signing");
}

def apkNamePrefix = "instalmint"
def majorNumber = "1"
if (flutterVersionName != null) {
    majorNumber = flutterVersionName
}
def minorNumber = "0"
def sprintNumber = "0"

android {
    compileSdkVersion 32

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.mcollect.origa.ai"
        minSdkVersion 20
        targetSdkVersion 33
        versionCode 27
        versionName getVersionName(majorNumber, minorNumber)
        multiDexEnabled true
        ndk {
            abiFilters "armeabi", "x86", "armeabi-v7a", "x86_64", "mips",
                    "mips64", "arm64-v8a"
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                def displayVersionName = versionName + "." + sprintNumber + "." + flutterVersionCode != null ? flutterVersionCode : 1
                def date = getDate()
                def modifiedApkName = apkNamePrefix + "-" + displayVersionName + "-" + variant.flavorName + "-" + variant.buildType.name + "-" + date + ".apk"
                outputFileName = modifiedApkName
                def fullVersionName = versionName + "." + sprintNumber
                buildConfigField("String", "displayVersionName", "\"" + displayVersionName + "\"")
                buildConfigField("String", "fullVersionName", "\"" + fullVersionName + "\"")
            }
        }
    }
    buildTypes {
        def CHARACTER = "Character"
        def XPOSELEVEL = "exposeLevel"
        release {
            buildConfigField(CHARACTER, XPOSELEVEL, "null")
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
//            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}


def getVersionName(majorNumber, minorNumber) {
    def computedVersionName = majorNumber + "." + minorNumber
    println "Version name is set to $computedVersionName"
    return computedVersionName
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

dependencies {
    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:29.0.4')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.android.support:multidex:1.0.3'
    implementation group: 'com.google.guava', name: 'guava', version: '28.1-android'
    implementation('io.grpc:grpc-okhttp:1.44.1') {
        exclude group: "com.squareup.okhttp"
    }
    implementation('com.google.firebase:firebase-firestore:24.2.1') {
        exclude group: "com.squareup.okhttp"
    }
    implementation "com.google.firebase:firebase-firestore-ktx:24.2.1"
    implementation "com.google.firebase:firebase-database-ktx:20.0.5"
    implementation "com.google.firebase:firebase-storage-ktx:20.0.1"
    implementation "com.firebaseui:firebase-ui-storage:4.3.2"
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
